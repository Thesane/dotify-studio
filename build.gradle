apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'maven'
apply plugin: "signing"

mainClassName = "application.MainFx"
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
javadoc {
	options.encoding = 'UTF-8'
	options.links('http://docs.oracle.com/javase/8/docs/api/');
}
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

def repoRevision = System.getenv("REPO_REVISION")!=null?System.getenv("REPO_REVISION"):repositoryRevision

group = "org.daisy.dotify"

sourceSets {
	main {
		java {
			srcDir 'src'
		}
		resources {
			srcDir 'src'
		}
	}
	test {
		java {
			srcDir 'test'
		}
		resources {
			srcDir 'test'
		}
	}
}

jar {
	doFirst {
		manifest {
	    	attributes ('Built-By': System.getProperty("user.name"),
	    	'Built-On': new Date().format("yyyy-MM-dd"),
			'Repository-Revision': "$repoRevision",
			'Implementation-Title': "$releaseName",
			'Implementation-Version': version,
			'Implementation-URL': "$repositoryURL",
			'Main-Class': 'application.MainFx',
			'Class-Path': configurations.compile.collect { it.getName() }.join(' ')
			)
		}
	}
	from sourceSets.main.allJava
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
	compile 'org.daisy.braille:braille-utils.api:3.0.1'
	compile 'org.daisy.braille:braille-utils.impl:3.0.0-beta'
	compile ('org.daisy.braille:braille-utils.pef-tools:2.0.0-alpha') {
		exclude module: 'Saxon-HE'
	}
	compile 'com.googlecode.ajui:ajui:1.0.0-SNAPSHOT'
	
	compile 'org.daisy.dotify:dotify.api:3.1.0'
	compile 'org.daisy.dotify:dotify.common:3.0.0'
	compile ('org.daisy.dotify:dotify.task-runner:2.0.0') {
		exclude module: 'dotify.task-api'
	}
	compile 'org.daisy.dotify:dotify.task-api:3.0.0'
	
	runtime ('org.daisy.dotify:dotify.formatter.impl:3.1.0') {
		exclude module: 'Saxon-HE'
	}
	runtime 'org.daisy.dotify:dotify.hyphenator.impl:3.0.0'
	runtime 'org.daisy.dotify:dotify.text.impl:3.0.0'
	runtime 'org.daisy.dotify:dotify.translator.impl:3.0.0'
	runtime ('org.daisy.dotify:dotify.task.impl:3.1.0') {
		exclude module: 'Saxon-HE'
	}

}

applicationDistribution.from(file('installer/docs')) {
    into 'docs'
}

applicationDistribution.from(file('installer/examples')) {
	into 'examples'
}

task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

artifacts {
	archives javadocJar, sourcesJar
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

signing {
	required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
	sign configurations.archives
}

uploadArchives {
	//Only upload if a git hash is supplied. On Travis only upload snapshots.
	enabled = repoRevision.size()==40 && System.getenv("TRAVIS_BUILD_ID")!=null
	repositories {
		mavenDeployer {
			if (isReleaseVersion) {
				beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
			}
			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: sonatypeUsername, password: sonatypePassword)
			}
			snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
				authentication(userName: sonatypeUsername, password: sonatypePassword)
			}
            pom.project {
				name 'dotify-studio'
				packaging 'jar'
				description 'Dotify Studio'
				url "$repositoryURL"
				scm {
					connection "$repositorySCM"
					developerConnection "$repositorySCM"
					url "$repositoryURL"
				}
                licenses {
					license {
						name 'LGPL'
						url 'http://www.gnu.org/licenses/lgpl.html'
					}
                }
				developers {
					developer {
						id 'joel'
						name 'Joel HÃ¥kansson'
					}
				}
			}
		}
	}
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}